{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo Santana\\\\conversor-moedas\\\\Converte-money\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Converter from './components/Converter';\nimport './components/Converter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [inputCurrency, setInputCurrency] = useState('USD');\n  const [outputCurrency, setOutputCurrency] = useState('EUR');\n  const [amount, setAmount] = useState('');\n  const [convertedAmount, setConvertedAmount] = useState('');\n  useEffect(() => {\n    async function fetchCurrencies() {\n      const response = await fetch('https://api.exchangerate-api.com/v4/latest/USD');\n      const data = await response.json();\n      setCurrencies(Object.keys(data.rates));\n    }\n    fetchCurrencies();\n  }, []);\n  async function convertCurrency() {\n    const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${inputCurrency}`);\n    const data = await response.json();\n    const exchangeRate = data.rates[outputCurrency];\n    setConvertedAmount((amount * exchangeRate).toFixed(2));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Converter, {\n      currencies: currencies,\n      inputCurrency: inputCurrency,\n      setInputCurrency: setInputCurrency,\n      outputCurrency: outputCurrency,\n      setOutputCurrency: setOutputCurrency,\n      amount: amount,\n      setAmount: setAmount,\n      convertedAmount: convertedAmount,\n      setConvertedAmount: setConvertedAmount,\n      convertCurrency: convertCurrency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sErMVzc5ta/iON6IgNUbKzC9WMM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Converter","jsxDEV","_jsxDEV","App","_s","currencies","setCurrencies","inputCurrency","setInputCurrency","outputCurrency","setOutputCurrency","amount","setAmount","convertedAmount","setConvertedAmount","fetchCurrencies","response","fetch","data","json","Object","keys","rates","convertCurrency","exchangeRate","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Gustavo Santana/conversor-moedas/Converte-money/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Converter from './components/Converter';\r\nimport './components/Converter.css';\r\n\r\nfunction App() {\r\n  const [currencies, setCurrencies] = useState([]);\r\n  const [inputCurrency, setInputCurrency] = useState('USD');\r\n  const [outputCurrency, setOutputCurrency] = useState('EUR');\r\n  const [amount, setAmount] = useState('');\r\n  const [convertedAmount, setConvertedAmount] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchCurrencies() {\r\n      const response = await fetch('https://api.exchangerate-api.com/v4/latest/USD');\r\n      const data = await response.json();\r\n      setCurrencies(Object.keys(data.rates));\r\n    }\r\n    fetchCurrencies();\r\n  }, []);\r\n\r\n  async function convertCurrency() {\r\n    const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${inputCurrency}`);\r\n    const data = await response.json();\r\n    const exchangeRate = data.rates[outputCurrency];\r\n    setConvertedAmount((amount * exchangeRate).toFixed(2));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Converter\r\n        currencies={currencies}\r\n        inputCurrency={inputCurrency}\r\n        setInputCurrency={setInputCurrency}\r\n        outputCurrency={outputCurrency}\r\n        setOutputCurrency={setOutputCurrency}\r\n        amount={amount}\r\n        setAmount={setAmount}\r\n        convertedAmount={convertedAmount}\r\n        setConvertedAmount={setConvertedAmount}\r\n        convertCurrency={convertCurrency}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd,eAAeiB,eAAeA,CAAA,EAAG;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,CAAC;MAC9E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCb,aAAa,CAACc,MAAM,CAACC,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,CAAC;IACxC;IACAP,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeQ,eAAeA,CAAA,EAAG;IAC/B,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CV,aAAc,EAAC,CAAC;IAC3F,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,MAAMK,YAAY,GAAGN,IAAI,CAACI,KAAK,CAACb,cAAc,CAAC;IAC/CK,kBAAkB,CAAC,CAACH,MAAM,GAAGa,YAAY,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;EACxD;EAEA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBzB,OAAA,CAACF,SAAS;MACRK,UAAU,EAAEA,UAAW;MACvBE,aAAa,EAAEA,aAAc;MAC7BC,gBAAgB,EAAEA,gBAAiB;MACnCC,cAAc,EAAEA,cAAe;MAC/BC,iBAAiB,EAAEA,iBAAkB;MACrCC,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBC,eAAe,EAAEA,eAAgB;MACjCC,kBAAkB,EAAEA,kBAAmB;MACvCS,eAAe,EAAEA;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3B,EAAA,CAvCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}